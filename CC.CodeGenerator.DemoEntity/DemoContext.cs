// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CC.CodeGenerator.DemoEntity;

public partial class DemoContext : DbContext
{
    public DemoContext()
    {
    }

    public DemoContext(DbContextOptions<DemoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Achievements> Achievements { get; set; }

    public virtual DbSet<Company> Company { get; set; }

    public virtual DbSet<Personnel> Personnel { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=CC.ToolKit.Net;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Chinese_PRC_CI_AS");

        modelBuilder.Entity<Achievements>(entity =>
        {
            entity.Property(e => e.AchievementsId).ValueGeneratedNever();
            entity.Property(e => e.PersonnelId).HasComment("员工");

            entity.HasOne(d => d.Personnel).WithMany(p => p.Achievements)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Achievements_Personnel");
        });

        modelBuilder.Entity<Company>(entity =>
        {
            entity.Property(e => e.CompanyId)
                .ValueGeneratedNever()
                .HasComment("企业");
            entity.Property(e => e.Address)
                .HasComment("地址")
                .UseCollation("SQL_Latin1_General_CP1_CI_AS");
            entity.Property(e => e.Title)
                .HasComment("名称")
                .UseCollation("SQL_Latin1_General_CP1_CI_AS");
        });

        modelBuilder.Entity<Personnel>(entity =>
        {
            entity.Property(e => e.PersonnelId)
                .ValueGeneratedNever()
                .HasComment("员工");
            entity.Property(e => e.Birthday).HasComment("生日");
            entity.Property(e => e.CompanyId).HasComment("企业");
            entity.Property(e => e.Gender)
                .HasComment("性别")
                .UseCollation("SQL_Latin1_General_CP1_CI_AS");
            entity.Property(e => e.IsJob).HasComment("是否在职");
            entity.Property(e => e.Name)
                .HasComment("姓名")
                .UseCollation("SQL_Latin1_General_CP1_CI_AS");

            entity.HasOne(d => d.Company).WithMany(p => p.Personnel)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Personnel_Company");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}